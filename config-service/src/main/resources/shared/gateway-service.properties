server.port=8080
server.servlet.context-path=/

## discovery-service to automatically discover and register microservices with the gateway,
## use the application-name property registered with the discovery server as the default path to the microservices
## (option)
spring.cloud.gateway.discovery.locator.enabled=true
## use application-name to identify services, not case-sensitive
## (option)
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

## set id to identify the route
spring.cloud.gateway.routes[0].id=auth-route
## gateway uses routes to redirect requests to other microservices (auth-service) using load-balancers
spring.cloud.gateway.routes[0].uri=lb://auth-service
## specify the conditions (predicates) for the route (routes whose paths start with '/auth/')
spring.cloud.gateway.routes[0].predicates=Path=/auth/**
## apply a filter to process the request before redirecting
## StripPrefix=1: remove the path '/auth/' before redirecting to auth-service
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[1].id=ecommerce-route
spring.cloud.gateway.routes[1].uri=lb://ecommerce-service
spring.cloud.gateway.routes[1].predicates=Path=/ecommerce/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1