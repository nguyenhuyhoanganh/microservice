server.port=8080
server.servlet.context-path=/

## discovery-service to automatically discover and register microservices with the gateway,
## use the application-name property registered with the discovery server as the default path to the microservices
## set to false because only rewritten endpoints need to be used
## (option)
spring.cloud.gateway.discovery.locator.enabled=false
## use application-name to identify services, not case-sensitive
## (option)
spring.cloud.gateway.discovery.locator.lower-case-service-id=true


### set id to identify the route
#spring.cloud.gateway.routes[0].id=ecommerce-route
### gateway uses routes to redirect requests to other microservices (ecommerce-service) using load-balancers
#spring.cloud.gateway.routes[0].uri=lb://ecommerce-service
### specify the conditions (predicates) for the route (routes whose paths start with '/ecommerce/')
#spring.cloud.gateway.routes[0].predicates=Path=/ecommerce/**
### apply a filter to process the request before redirecting
### StripPrefix=1: remove the path '/ecommerce/' before redirecting to ecommerce-service
#spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

## log
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty=DEBUG